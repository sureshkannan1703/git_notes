Git notes :
------------
Git_learning> git --version
git version 2.43.0.windows.1

Git_learning> git config --global --list
user.name=Suresh kannan
user.email=xxx@gmail.com

Git_learning> git status
fatal: not a git repository (or any of the parent directories): .git   

Git_learning> git init
Initialized empty Git repository in C:/Users/sures/LLD/Git-GitHub/Git_learning/.git/

Check Status of the Repository :
--------------------------------
Git_learning> git status
On branch master
No commits yet
nothing to commit (create/copy files and use "git add" to track)

Change -> master to main (Repo name):
--------------------------------------
Git_learning> git init -b main
Initialized empty Git repository in C:/Users/sures/LLD/Git-GitHub/Git_learning/.git/

Check Status of the Repository :
--------------------------------
Git_learning> git status
On branch main                 --Name changed to main from master.
No commits yet
nothing to commit (create/copy files and use "git add" to track)

Create file Notes.txt manually on project folder(Git_learning).

Check Status of the Repository :
--------------------------------
Git_learning> git status
On branch main
No commits yet
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Notes.txt
nothing added to commit but untracked files present (use "git add" to track)

Staging : Add Untracked file to staging.
----------------------------------------
Git_learning> git add Notes.txt
Untracked files(Notes.txt) moved to stage area.

Git commit:
-----------
Git_learning> git commit -m "Notest steps updated"

Show commit logs of repository :
--------------------------------
Git_learning> git log
commit full_commit_id (HEAD -> main)
Author: Suresh kannan <xxx@gmail.com>
Date:   Sat Jan 27 00:30:15 2024 +0530

------------------------------------------------------------------------------------Until staging -> commiting file to git lecture..
Display the changes on files : Check Modified file's content :(>git diff)
------------------------------------------------------------------------
>git diff (check what changes happens on Un-staged files content.)
>git diff --staged  (check what changes happens on staged files content.)

Git_learning> git status
On branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Readme.md
        creds.txt
nothing added to commit but untracked files present (use "git add" to track)

Add all unstaged file's to sttaging :(>git add .)
-------------------------------------------------
Git_learning> git add .

Git_learning> git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Readme.md
        new file:   creds.txt

Git_learning> git commit -m "commited  Readme,creds files"

Remove file from Repository :
-----------------------------
Git_learning> del creds.txt
Git_learning> git status
On branch main
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    creds.txt

Commit the changes after deletion change :
------------------------------------------
Git_learning> git commit -m "removed creds.txt file"
-------------------------------------------------------------------------Local Repository commands learning..

General:
--------
 Open source Remote Repository download:  >git clone https..project_url_copy dropdown.

Note : ssh key generate for connect remote repo : >ssh-keygen -o
We will get unique sha key : ssh-rsa hexadecimal_key

Stored in a specific folder while generating key :
--------------------------------------------------
>\.ssh>type id_rsa.pub  (display a file's content on cmd -> >type filename.txt/pdf)

Get the key & store it in gitHub account :
-------------------------------------------
Note : go to -> githup ->profile icon-> settings -> SSH-CFG -> paste ssh key with name of folder name/unique name ->save.
You have successfully added the key 'local-repo' name. 
(now local repo connected with remote repo using ssh key)
SHA256: short part of unique key.

Git tags :
----------
>git remote -v
origin  ssh-url-of-repository (fetch) (files fetch from this repository)
origin  ssh-url-of-repository (push) (files changes pushed to this repository)

Userful for mention version of current completed state of project via tag command.

Show existing tags :
--------------------
>git tag    
Typse of Tags :
----------------
1. Annotated tags (used for large projects) 2. Lightweighted tags.

Set a tag for current project state.
------------------------------------
>git tag version_1 -m "Project Version-1"

Push tag to Remote repository :
-------------------------------
>git push origin tag_name       (check the git hub repo's tag section.)

Branches :
----------
>git branch  (list all branches of repository)
>git branch --all (list local and remote branch details)
>git branch - (switch to previous branch)
>git branch -d branch_name (delete the branch)
>git push origin branch_name (puch branch to remote repository)
Merge branches :
-----------------
Creating new branch :
---------------------
>git switch -b temp_branch  
> git switch temp_branch
Switched to branch 'temp_branch'
> git status
On branch temp_branch
nothing to commit, working tree clean
Work on temp branch and make changes.
Push temp branch to remote repository :
----------------------------------------
> git push origin temp_branch

if you want some other branch work to main branch,
--------------------------------------------------
> git switch main
Switched to branch 'main'   (make sure you're in main before merge)
> git merge temp_branch
> git push origin main
